name: Run Municipio E2E Tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}  # Pass the cache-hit status to other jobs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Node.js modules and Playwright
        id: cache-deps  # Define an ID for this step to reference the cache-hit status later
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-deps
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        if: steps.cache-deps.outputs.cache-hit != 'true'  # Skip if cache is hit
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies and Playwright
        if: steps.cache-deps.outputs.cache-hit != 'true'  # Only run if cache is not hit
        run: |
          npm ci
          npx playwright install --with-deps chromium
        shell: bash

  playwright-tests:
    needs: install-dependencies
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
        shardTotal: [16]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore Node.js modules and Playwright cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-deps
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build test fixtures
        env:
          SITEMAP_URLS: ${{ secrets.SITEMAP_URLS }}
        run: npm run test:setup-data
        shell: bash

      - name: Run Playwright tests
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
        shell: bash

      - name: Upload blob report to GitHub Actions Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1

  merge-reports:
    if: ${{ !cancelled() }}
    needs: [playwright-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 1

      - name: Clean up downloaded blob reports
        run: rm -rf all-blob-reports blob-report*
        shell: bash
